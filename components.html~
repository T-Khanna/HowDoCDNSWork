<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="favicon.ico">

    <title>CDN Components &mdash; How CDNs Work</title>

    <!-- Bootstrap core CSS -->
    <link href="assets/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="styles.css" rel="stylesheet">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
  </head>

  <body>

        <nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">How CDNs Work</a>
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          <ul class="nav navbar-nav navbar-right">
            <li><a href="#">Home</a></li>
            <li><a href="history.html">History</a></li>
            <!-- Dropdown menu for my webpages -->
            <li class="dropdown">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                 Architecture<span class="caret"></span></a>
              <ul class="dropdown-menu">
                <li><a href="components.html">Components</a></li>
                <li><a href="requestrouting.html">Request Routing</a></li>
              </ul>
            </li>

            <!-- Dropdown menu for my webpages -->
            <li class="dropdown">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                 Topology<span class="caret"></span></a>
              <ul class="dropdown-menu">
                <li><a href="whatistopology.html">What is Topology?</a></li>
                <li><a href="cdntopology.html">CDN Topology</a></li>
              </ul>
            </li>
            <li><a href="aboutus.html">About Us</a></li>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div>
    </nav>

    <div class="jumbotron" id="jumbo">
      <video autoplay loop muted>
        <source src="assets/video/ethernet.mp4" type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"' />
      </video>
      <div class="container">
        <h2 class="h1">Architectural Components in CDNs</h2>
      </div>
    </div>

    <div class="container">
      <!-- Example row of columns -->
      <div class="row">
        <div class="col-md-12">
          <p>There are many components in CDNs which make up the architecture for the CDN. These components are introduced with the sole purpose of minimising Round-Trip Time, or RTT, 'which is the number of milliseconds it takes for a browser to send a request and receive a response back from a server.' Round-Trip Time is dependent on many factors, the most interesting one being the physical distance between the user and the server<sup><a href="#fn1" id="ref1" class="reference">1</a></sup>.

          This relates to the topology discussion within CDN techonology, which is a major architectural question when developing a CDN service.
          </p>
          <p>
          In order to minimise the Round-Trip Time, every CDN has at least these components in place:
            <ul> 
              <li> Origin Server
              <li> Surrogate (Edge) Servers 
              <li> Request Routing
            </ul>
          </p>

          <h3>Origin Server</h3>
          <p>This is simply the server which originally contained the information the user is trying to access. The information from here is replicated into the CDN's surrogate/edge cache servers.<sup><a href="#fn2" id="ref2" class="reference">2</a></sup>. The image below demonstrates how the process works<sup><a href="#fn3" id="ref3" class="reference">3</a></sup>.</p>

<figure class="figure">
  <img src="assets/img/originserver.png" class="figure-img img-fluid img-rounded" alt="A diagram of how an origin server works.">
</figure>
          <p>When the first request for the file <strong>foo.png</strong> is sent, the request is first sent through the surrogate server. However, the surrogate server currently does not contain the file <strong>foo.png</strong>, so the request is pushed to the origin server. The file <strong>foo.png</strong> is retrieved and sent back to the user, storing the data for the file in the surrogate server in the process. Due to the caching that occurs, the second and subsequent requests for the same file will stop and retrieve the cached image from the surrogate server<sup><a href="#fn3" id="ref3" class="reference">3</a></sup>.
          </p>

          <h3>Surrogate Servers</h3>
          <p>These are the servers which stores the data accessed from the first request to the origin server. Sometimes called as edge servers, they are used as an alternative for users to access their data, as sending requests to the origin server from all over the world would prove to be problematic. As such, these are used to 'improve user experience and lower transmission costs'<sup><a href="#fn3" id="ref3" class="reference">3</a></sup>. How they are used when processing requests can be seen above in the image illustrating the process of requesting the file <strong>foo.png</strong>.</p>

          <h3>Request Routing</h3>
          <p>A request routing mechanism is used to direct the user's request to the surrogate server, or set of servers, which is closest to the location of the user. This allows the user to obtain the requested content in minimal time<sup><a href="#fn4" id="ref4" class="reference">4</a></sup>. This is the method used to send the request to the surrogate server, if the server has the data from the origin server. For more information on Request Routing, <a href="requestrouting.html">click here</a>.
          </p>
          <hr>
        </div>
      </div>
    </div>

    <!-- References -->
    <div class="container">
      <div class="row">
        <div class="col-md-12">
          <h3>References</h3>
          <ol id="reflist">
            <li id="fn1">Anon. <em>CDN Infrastructure</em>. Available from: <a href="https://www.incapsula.com/cdn-guide/cdn-architecture.html" target="_blank">https://www.incapsula.com/cdn-guide/cdn-architecture.html</a>. [Accessed: 15th February 2016].
            <li id="fn2">Mukaddim Pathan. <em>Content Delivery Network (CDN) Research Directory</em>. Available from: <a href="http://www.cloudbus.org/cdn/RD/CDNs.html" target="_blank">http://www.cloudbus.org/cdn/RD/CDNs.html</a>. [Accessed: 1st March 2016].
            <li id="fn3">Nicholas C. Zakas. <em>How content delivery networks (CDNs) work</em>. Available from: <a href="https://www.nczonline.net/blog/2011/11/29/how-content-delivery-networks-cdns-work/" target="_blank">https://www.nczonline.net/blog/2011/11/29/how-content-delivery-networks-cdns-work/</a>. [Accessed: 17th February 2016].
            <li id="fn4">A. Barbir, et al. <em>Known Content Network (CN) Request-Routing Mechanisms</em>. Available from: <a href="https://tools.ietf.org/html/rfc3568" target="_blank">https://tools.ietf.org/html/rfc3568</a>. [Accessed: 25th February 2016].
          </ol>  
        </div>
      </div>

      <div class="row">
        <div class="col-md-12">
          <hr>

          <p>This page was written by Tanmay Khanna.</p>
        </div>
      </div>

<hr>

      <footer>
        <p>
          <a href="http://imperial.ac.uk" class="pull-left"><img src="assets/img/iclogo.jpg" alt="Imperial College London logo" /></a>
          <div class="pull-right text-right">
            First Year Computing Topics Project at <a href="http://www.doc.ic.ac.uk" target="_blank">Imperial College London</a><br />
            Contributed to by <a href="http://thomasbower.net" target="_blank" rel="author">Thomas Bower</a>, 
                              <a href="http://www.doc.ic.ac.uk/~tk915/"  target="_blank" rel="author">Tanmay Khanna</a>, 
                              <a href="http://www.doc.ic.ac.uk/~ay1013/" target="_blank" rel="author">Ali Yepifanova</a>, 
                          and <a href="http://www.doc.ic.ac.uk/~mz4615/" target="_blank" rel="author">Michelle Zhao</a>
          </div>
        </p>
      </footer>

    </div>
      
          <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="assets/js/vendor/jquery.min.js"><\/script>')</script>
    <script src="assets/js/bootstrap.min.js"></script>
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <script src="assets/js/ie10-viewport-bug-workaround.js"></script>
  </body>
</html>
